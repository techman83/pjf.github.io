<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Techman83's Blog - hardware</title><link href="https://techman83.me/" rel="alternate"></link><link href="https://techman83.me/feeds/hardware-atom.xml" rel="self"></link><id>https://techman83.me/</id><updated>2018-01-29T00:00:00+08:00</updated><entry><title>The Hugs Strike Back!</title><link href="https://techman83.me/hardware/2018/01/29/the_hugs_strike_back.html" rel="alternate"></link><published>2018-01-29T00:00:00+08:00</published><updated>2018-01-29T00:00:00+08:00</updated><author><name>Leon Wright</name></author><id>tag:techman83.me,2018-01-29:/hardware/2018/01/29/the_hugs_strike_back.html</id><summary type="html">&lt;p&gt;Another year, another amazing &lt;a href="http://lca2018.org"&gt;Linux Conf AU&lt;/a&gt;! Based on feedback from LCA2017, I was definitely going to iterate on the hug detector. In that time the &lt;a href="http://esp32.net/"&gt;ESP32&lt;/a&gt; platform has begun to mature and because I like challenges, decided to use a board I received days prior to leaving for the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another year, another amazing &lt;a href="http://lca2018.org"&gt;Linux Conf AU&lt;/a&gt;! Based on feedback from LCA2017, I was definitely going to iterate on the hug detector. In that time the &lt;a href="http://esp32.net/"&gt;ESP32&lt;/a&gt; platform has begun to mature and because I like challenges, decided to use a board I received days prior to leaving for the conference and really only flashed with blink.&lt;/p&gt;
&lt;p&gt;Other project parameters I'd set myself include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Beyond component testing, nothing developed before the conference&lt;/li&gt;
&lt;li&gt;Conference badge as an integral part of the design&lt;/li&gt;
&lt;li&gt;Operational by main conference opening (Wednesday)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With that in mind, I set about beginning my work Monday evening. As I presented a &lt;a href="../../../../talks/2018/01/22/come_on_do_you_want_your_mods_to_live_forever.html"&gt;talk&lt;/a&gt; earlier in the day and quite a broken sleep the night before, I was feeling a little weary. I spent several hours fighting with &lt;a href="https://en.wikipedia.org/wiki/I%C2%B2C"&gt;I²C&lt;/a&gt; on the &lt;a href="https://wiki.wemos.cc/products:lolin32:lolin32_lite"&gt;Wemos Lolin32_Lite&lt;/a&gt;, which didn't seem to have pins mapped for the purpose and discussed GPIO Muxing which I was unfamiliar with. After deciding I was way too tired for that I figured I'd sleep and see if I could find one of the Hardware guys to chat about it in the morning.&lt;/p&gt;
&lt;p&gt;I chatted to &lt;a href="https://twitter.com/jonoxer"&gt;@jonoxer&lt;/a&gt;, who pointed me in the direction of &lt;a href="https://twitter.com/geekscape"&gt;@geekscape&lt;/a&gt; and then I bumped into &lt;a href="https://twitter.com/wolfeidau"&gt;@wolfeidau&lt;/a&gt; who I'd spoken to at the open hardware miniconf. He understood exactly what I was trying to do and was more than happy to impart his knowledge and learnings about working with I²C, in particular on the ESP32 platform. Turns out that any pin that isn't an input only pin, can be re-assigned using the Wire library. He also pointed me in the direction of an &lt;a href="https://github.com/CCHS-Melbourne/iotuz-esp32-hardware/blob/master/Software/Snippets/i2cScanTest/i2cScanTest.ino"&gt;I²C scanner&lt;/a&gt; used in the previous years hardware project as an excellent starting place.&lt;/p&gt;
&lt;p&gt;Feeling motivated after dinner, I headed back to the  accommodation and begun work. With a deadline of 2130 before I'd fall back to the ESP8266 based &lt;a href="https://wiki.wemos.cc/products:d1:d1_mini"&gt;D1 Mini&lt;/a&gt;, which I was far more familiar with; I got started. Now getting the pins remapped was pretty easy as it turns out:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Wire.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// SDA, SCL&lt;/span&gt;
    &lt;span class="c1"&gt;// Do things&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However whilst I could get it to work via the I²C scanner, I couldn't get it to work via the library for the &lt;a href="https://learn.adafruit.com/adafruit-vl6180x-time-of-flight-micro-lidar-distance-sensor-breakout"&gt;vl6180x lidar distance sensor&lt;/a&gt; that was a core part of how I would be detecting hugs this year. After a lot of flaffing around, I figured it's a conference &lt;a href="https://github.com/techman83/vl6180x-arduino/commit/42f625008d277f2d2f184dc32ec94dede9f2005a"&gt;and hacking the library is always an option&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/955726017603055616"&gt;Tweet of Techman_83/955726017603055616&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;That success spurred me on to tidying up the code to work with the range finder. I also got pretty sidetracked trying to get the &lt;a href="https://www.freetronics.com.au/products/freepixel-addressable-rgb-led-module"&gt;FreePixel&lt;/a&gt; modules working and struggled with different libraries not actually producing the results I expected. As it was getting late I decided to use the built in LED as the visual indicator of a successful hug.&lt;/p&gt;
&lt;figure &gt;
  &lt;a class="fancybox" id="single_image" href="https://www.dropbox.com/s/1suawxnm5pougro/badge.jpg?dl=1"&gt;
    &lt;img src="https://www.dropbox.com/s/sbyhzaev5k5w7ap/badge-sml.jpg?dl=1" /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The only thing that was left to do was hook up the JST Connector (pictured below) and test the battery.&lt;/p&gt;
&lt;figure &gt;
  &lt;a class="fancybox" id="single_image" href="https://www.dropbox.com/s/5b938py1cy33pls/jst2mm1.jpg?dl=1"&gt;
    &lt;img src="https://www.dropbox.com/s/pqv2no2nb9tb0kf/jst2mm1-sml.jpg?dl=1" /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Unfortunately whilst I distinctly remember checking the polarity of the connector...&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/developerjack/status/955800704572010496"&gt;Tweet of developerjack/955800704572010496&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;Fortunately I didn't destroy it, but the charge circuitry is limited to about 100mA now. As opposed to the 500mA it is actually capable of. Seeing as it was 1am Wednesday morning, I had a functioning hug detector, and nearly destroyed it.. I decided to call it done and go to bed.&lt;/p&gt;
&lt;p&gt;I headed off to the conference in the morning and after remembering to start the backend infrastructure (a python script running in screen..)&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/955924923888779264"&gt;Tweet of Techman_83/955924923888779264&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;Over the course of a couple of days it got a thorough testing and generated a lot of conversations. Which in reality was part of my motivation to build it. Oddly enough, having wires hanging off your badge is a wonderful conversation starter!&lt;/p&gt;
&lt;p&gt;All was not well by Friday morning, the hug detector worked a little too well and I ended up getting filtered from twitter searches.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/web_goddess/status/956674224252338177"&gt;Tweet of web_goddess/956674224252338177&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;So overall I'm really happy with how well everything worked, the wonderful interactions it encouraged during the conference and all the wonderful people who made it extra fun. I think for the next iteration I'd like to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a dedicated hug bot account, to ensure I don't bust my own account and also make it easier for people to filter out the hugs&lt;/li&gt;
&lt;li&gt;Randomise the tweet content a bit more so that I don't trip up the filters&lt;/li&gt;
&lt;li&gt;Incorporate better hug feedback, be it lights or an OLED display of some sort&lt;/li&gt;
&lt;li&gt;Some better handling of I²C issues, I got around it this year mostly by regular power cycling which isn't ideal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And as a final note, after the conference I went to &lt;a href="http://www.braincandylive.com/"&gt;Brain Candy Live&lt;/a&gt;, hosted by &lt;a href="https://twitter.com/donttrythis"&gt;@donttrythis&lt;/a&gt; and &lt;a href="https://twitter.com/tweetsauce"&gt;@tweetsauce&lt;/a&gt;. My ticket included a 'Meet and Greet', however in my very exhausted and excited state forgot to look at the camera when getting a photo with them!&lt;/p&gt;
&lt;figure &gt;
  &lt;a class="fancybox" id="single_image" href="https://www.dropbox.com/s/yojyxtuwdz1zimm/meetgreet.jpg?dl=1"&gt;
    &lt;img src="https://www.dropbox.com/s/hf6mkcyz3gfpwa7/meetgreet-sml.jpg?dl=1" /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;All was not lost though, as I did get a hug out of both Michael and Adam! Which was the best way to finish an entirely spectacular week!&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/957220689303384065"&gt;Tweet of Techman_83/957220689303384065&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/957220801052164096"&gt;Tweet of Techman_83/957220801052164096&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="programming"></category><category term="arduino"></category><category term="linuxconfau"></category><category term="lca2018"></category></entry><entry><title>Don't underestimate the... Doorbell</title><link href="https://techman83.me/hardware/2017/06/04/dont_underestimate_the_doorbell.html" rel="alternate"></link><published>2017-06-04T00:00:00+08:00</published><updated>2017-06-04T00:00:00+08:00</updated><author><name>Leon Wright</name></author><id>tag:techman83.me,2017-06-04:/hardware/2017/06/04/dont_underestimate_the_doorbell.html</id><summary type="html">&lt;p&gt;A while ago I needed a doorbell, so I &lt;a href="https://github.com/techman83/hackydoorbell"&gt;hacked&lt;/a&gt; one together using a Raspberry Pi I had laying around. It was a temporary fix while I got around to building an Arduino based replacement. A month or so ago the SD card croaked, so it was time.&lt;/p&gt;
&lt;p&gt;I have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while ago I needed a doorbell, so I &lt;a href="https://github.com/techman83/hackydoorbell"&gt;hacked&lt;/a&gt; one together using a Raspberry Pi I had laying around. It was a temporary fix while I got around to building an Arduino based replacement. A month or so ago the SD card croaked, so it was time.&lt;/p&gt;
&lt;p&gt;I have a bunch of &lt;a href="https://wiki.wemos.cc/products:d1:d1_mini"&gt;Wemos D1 Mini's&lt;/a&gt; which would be the basis of my project and I also wanted it to play an actual sound file, so I'd ordered an &lt;a href="https://en.wikipedia.org/wiki/I%C2%B2S"&gt;I2S&lt;/a&gt; based &lt;a href="https://learn.adafruit.com/adafruit-max98357-i2s-class-d-mono-amp/overview"&gt;Class-D Mono Amplifier&lt;/a&gt; from Adafruit.&lt;/p&gt;
&lt;figure &gt;
  &lt;a class="fancybox" id="single_image" href="https://www.dropbox.com/s/tg2mlxazxahrkhj/doorbell.jpg?dl=1"&gt;
    &lt;img src="https://www.dropbox.com/s/6rqa9o57ruy6tik/doorbell-sml.jpg?dl=1" /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I'd stumbled across a &lt;a href="https://github.com/bbx10/SFX-I2S-web-trigger"&gt;project&lt;/a&gt; using the same amplifier and they'd used a permissive license, so I didn't actually end up needing to write much of my own code. I however spent a number of hours trying to figure out why the sound was extremely distorted, only to note that I'd hooked up &lt;code&gt;LRC&lt;/code&gt; to &lt;code&gt;TX&lt;/code&gt; instead of &lt;code&gt;D4&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Pin Connections&lt;/h3&gt;
&lt;table class="table"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Adafruit I2S DAC&lt;/th&gt;
            &lt;th&gt;ESP8266&lt;/th&gt;
            &lt;th&gt;D1 Mini&lt;/th&gt;
            &lt;th&gt;Description&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;LRC&lt;/td&gt;
            &lt;td&gt;GPIO2/TX1 LRCK&lt;/td&gt;
            &lt;td&gt;D4&lt;/td&gt;
            &lt;td&gt;Left/Right audio&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;BCLK&lt;/td&gt;
            &lt;td&gt;GPIO15 BCLK&lt;/td&gt;
            &lt;td&gt;D8&lt;/td&gt;
            &lt;td&gt;I2S Clock&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;DIN&lt;/td&gt;
            &lt;td&gt;GPIO03/RX0 DATA&lt;/td&gt;
            &lt;td&gt;RX&lt;/td&gt;
            &lt;td&gt;I2S Data&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;GAIN&lt;/td&gt;
            &lt;td&gt;n/c&lt;/td&gt;
            &lt;td&gt;n/c&lt;/td&gt;
            &lt;td&gt;9 dB gain&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;SD&lt;/td&gt;
            &lt;td&gt;n/c&lt;/td&gt;
            &lt;td&gt;n/c&lt;/td&gt;
            &lt;td&gt;Stereo average&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;GND&lt;/td&gt;
            &lt;td&gt;GND&lt;/td&gt;
            &lt;td&gt;GND&lt;/td&gt;
            &lt;td&gt;Ground&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Vin&lt;/td&gt;
            &lt;td&gt;BAT&lt;/td&gt;
            &lt;td&gt;5V&lt;/td&gt;
            &lt;td&gt;3.3/5V power&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I've broken the Non Blocking WAV player into a separate library &lt;a href="https://github.com/techman83/esp8266-wavplay"&gt;ESP8266-wavplay&lt;/a&gt; along with one for the Wav SPIFFS reader &lt;a href="https://github.com/techman83/esp8266-wavspiffs"&gt;ESP8266-wavspiffs&lt;/a&gt;, which makes for a tiny amount of code to produce a functional doorbell.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;ESP8266Wavplay.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;115200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Booting&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Set D3 as Switch pin&lt;/span&gt;
  &lt;span class="n"&gt;pinMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;D3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;INPUT_PULLUP&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Setup WavPlay&lt;/span&gt;
  &lt;span class="n"&gt;wavSetup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;showDir&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;D3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;wavPlaying&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;wavStartPlaying&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/doorbell.wav&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// WavPlay is non blocking, we need to call it to make&lt;/span&gt;
  &lt;span class="c1"&gt;// sure it keeps playing until file end.&lt;/span&gt;
  &lt;span class="n"&gt;wavLoop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find the project &lt;a href="https://github.com/techman83/esp8266-doorbell"&gt;here&lt;/a&gt; and is already laid out as a &lt;a href="http://platformio.org/"&gt;PlatformIO&lt;/a&gt; project. If you've yet to come across PlatformIO and you do a lot with Arduino, it takes a lot of the pain out of things like managing dependencies, custom libraries, platform independent code etc.&lt;/p&gt;
&lt;p&gt;Happy Hacking and  may the force be with you.&lt;/p&gt;
&lt;p&gt;
&lt;iframe allowfullscreen="true" frameborder="0" height="315" src="//www.youtube.com/embed/SCnJ7anb-r0" width="560"&gt;&lt;/iframe&gt;
&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="programming"></category><category term="arduino"></category><category term="esp8266"></category><category term="hardware"></category></entry><entry><title>Hacking your Conference badge for Hugs &amp; Profit</title><link href="https://techman83.me/hardware/2017/01/22/hacking_hugs_profit.html" rel="alternate"></link><published>2017-01-22T00:00:00+08:00</published><updated>2017-01-22T00:00:00+08:00</updated><author><name>Leon Wright</name></author><id>tag:techman83.me,2017-01-22:/hardware/2017/01/22/hacking_hugs_profit.html</id><summary type="html">&lt;p&gt;Last week was &lt;a href="http://lca2017.org"&gt;Linux Conf AU 2017&lt;/a&gt;, which is a community run Free and Open Source Software conference that is in a different A/NZ city every year. This year I'd managed to attend the &lt;a href="http://www.openhardwareconf.org/"&gt;Open Hardware MiniConf&lt;/a&gt; and was inspired to build something during the conference. I'm not sure …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week was &lt;a href="http://lca2017.org"&gt;Linux Conf AU 2017&lt;/a&gt;, which is a community run Free and Open Source Software conference that is in a different A/NZ city every year. This year I'd managed to attend the &lt;a href="http://www.openhardwareconf.org/"&gt;Open Hardware MiniConf&lt;/a&gt; and was inspired to build something during the conference. I'm not sure how it occurred to me to build a 'Hug Detector' into my Conference badge, but it did and after talking about it with some fellow delegates, the feedback was overwhelmingly positive.&lt;/p&gt;
&lt;p&gt;So after heading to my room early to get some sleep, I got sidetracked. Armed with an &lt;a href="https://espressif.com/en/products/hardware/esp8266ex/overview"&gt;ESP8266&lt;/a&gt; based &lt;a href="https://www.wemos.cc/product/d1-mini.html"&gt;D1 Mini&lt;/a&gt;, some sensors, a breadboard, and some wires I stayed up until 1am. Then a wild &lt;a href="https://github.com/techman83/been_hugged"&gt;GitHub repository&lt;/a&gt; occurred.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/821716638235906050"&gt;Tweet of Techman_83/821716638235906050&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;I popped by the rego desk the next morning, to acquire an extra badge holder. Which was met with some initial quizzical expressions, followed by intrigue whilst handing it over. Sitting up the back of the sessions and stabbing myself several times, I managed to get something of a working concept. &lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/johndalton/status/821918573215895552"&gt;Tweet of johndalton/821918573215895552&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;That evening I set about tidying up the wires and got it working well enough with the sensors I had on hand. However I really wanted to get the &lt;a href="http://www.freetronics.com.au/products/freepixel-addressable-rgb-led-module"&gt;Freepixels&lt;/a&gt; I'd attached to display feedback about 'Hug Quality' and was hitting a strange problem with the micro controllers memory disappearing when ever I utilised them. As it turns out there was a dev from &lt;a href="https://espressif.com/"&gt;Expressif Systems&lt;/a&gt; who was intrigued by my badge and when I mentioned my problem it was met with "Want me to take a look at the code". &lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Techman_83/status/822267900585123840"&gt;Tweet of Techman_83/822267900585123840&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;As it turns out the bug was in how I was iterating over the LED modules:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;NUM_LEDS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CRGB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;maximizeBrightness&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;FastLED&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;'NUM_LEDS' is configured as '2', but arrays start at '0' in a lot of languages (including c++) so I was iterating past the end of 'leds' array and corrupting the micro controllers memory. I'd missed that entirely and as I generally work in higher level scripting languages, this kind of thing normally blows up the runtime in quite an obvious way. Below is the single character change that fixed the problem.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;NUM_LEDS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CRGB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;leds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;maximizeBrightness&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;FastLED&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Overall I really enjoyed working on the project. It was a fun way to make new friends and make a positive contribution to what was an exceptional LCA. Here are some extra tweets that shared the joy &amp;lt;3&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/r1chardj0n3s/status/821975880498974720"&gt;Tweet of r1chardj0n3s/821975880498974720&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/vmbrasseur/status/822198988577198080"&gt;Tweet of vmbrasseur/822198988577198080&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/The_McJones/status/822198909896257536"&gt;Tweet of The_McJones/822198909896257536&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/johndalton/status/822219959610707969"&gt;Tweet of johndalton/822219959610707969&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/Charcol0x89/status/822294441813622784"&gt;Tweet of Charcol0x89/822294441813622784&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/ITProAssoc/status/822298107274821632"&gt;Tweet of ITProAssoc/822298107274821632&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/evildeece/status/822301398767259649"&gt;Tweet of evildeece/822301398767259649&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="programming"></category><category term="arduino"></category><category term="linuxconfau"></category><category term="lca2017"></category></entry><entry><title>Automating your home with 'themachine'</title><link href="https://techman83.me/hardware/2017/01/11/automating_your_home_with_themachine.html" rel="alternate"></link><published>2017-01-11T00:00:00+08:00</published><updated>2017-01-11T00:00:00+08:00</updated><author><name>Leon Wright</name></author><id>tag:techman83.me,2017-01-11:/hardware/2017/01/11/automating_your_home_with_themachine.html</id><summary type="html">&lt;p&gt;There will be more posts to come, but for some time I have been playing around with home automation. One of the things I really wanted to do was utilise some form of machine learning to make decisions about when I wanted the Shed's Airconditioning or the wall fan turned …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There will be more posts to come, but for some time I have been playing around with home automation. One of the things I really wanted to do was utilise some form of machine learning to make decisions about when I wanted the Shed's Airconditioning or the wall fan turned on. I could have utilised rules in my &lt;a href="http://www.openhab.org/"&gt;OpenHAB&lt;/a&gt; based home automation system, however I'd already gotten reasonably creative with those and wanted a challenge.&lt;/p&gt;
&lt;p&gt;I've been learning about machine learning for a while, in particular however it was this post on &lt;a href="http://stackoverflow.com/questions/30991592/support-vector-machine-in-python-using-libsvm-example-of-features"&gt;Stackoverflow&lt;/a&gt; and sentdex's &lt;a href="https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v"&gt;Machine Learning with Python&lt;/a&gt; playlist that really helped me find a solution that appeared to fit what I was trying to do.&lt;/p&gt;
&lt;p&gt;Using a couple of &lt;a href="http://www.freetronics.com.au/products/humidity-and-temperature-sensor-module"&gt;DHT22&lt;/a&gt; sensor modules attached to &lt;a href="https://www.wemos.cc/product/d1-mini.html"&gt;Wemos D1 Mini&lt;/a&gt;, I was readily collecting Temperature data into OpenHAB.&lt;/p&gt;
&lt;figure &gt;
  &lt;a class="fancybox" id="single_image" href="https://www.dropbox.com/s/q8z0keglyjudxfz/dht11_wemos_d1.jpg?dl=1"&gt;
    &lt;img src="https://www.dropbox.com/s/woijao1722z2qdl/dht11_wemos_d1-sml.jpg?dl=1" /&gt;
  &lt;/a&gt;
      &lt;figcaption&gt;Wemos D1 + DHT22 shown with USB Key for Scale&lt;figcaption/&gt;
&lt;/figure&gt;

&lt;p&gt;I settled on a Support Vector Machine algorithm as it seemed to best fit my dataset of "inTemperatur,inHumidity,outTemperature,outHumidity" and my decisions required being On or Off. The following video does an excellent job of explaining SVM.&lt;/p&gt;
&lt;p&gt;
&lt;iframe allowfullscreen="true" frameborder="0" height="315" src="//www.youtube.com/embed/mA5nwGoRAOo" width="560"&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;p&gt;I ended up writing a Python script that listens for change and learn events on the &lt;a href="https://en.wikipedia.org/wiki/MQTT"&gt;MQTT&lt;/a&gt; message bus which ties my home automation system together. OpenHAB fires change events when I'm present in the shed and fires learn events when I manually turn on AC or Fan on. If 'themachine' predicts a positive result greater than 95% certaintity it will fire back to a channel that OpenHAB has a switch sitting on to receive the event.&lt;/p&gt;
&lt;p&gt;Example log of an event:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2017-01-11 20:53:52,721 INFO     I&amp;#39;m 97.92% sure you wanted the shedFan on. shed,26.70,58.10,21.00,81.30
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find out more information about how to implement something similar on &lt;a href="https://github.com/techman83/habsvm-themachine"&gt;GitHub&lt;/a&gt;, it's MIT licensed so feel free to use the code how you'd like.&lt;/p&gt;
&lt;p&gt;I have to admit, the first time it came on by itself was a little weird. I was standing on a stepladder doing some terminating in my rack (yes of course I have a full height network rack in my shed), thinking that it had gotten a little warm &lt;em&gt;AC Turns on&lt;/em&gt; ... "woah". Skynet however is a long way off, well at least in my little home automation setup.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="homeautomation"></category><category term="machinelearning"></category><category term="programming"></category><category term="python"></category></entry></feed>