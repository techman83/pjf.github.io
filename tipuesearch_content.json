{"pages":[{"tags":"hardware","text":"There will be more posts to come, but for some time I have been playing around with home automation. One of the things I really wanted to do was utilise some form of machine learning to make decisions about when I wanted the Shed's Airconditioning or the wall fan turned on. I could have utilised rules in my OpenHAB based home automation system, however I'd already gotten reasonably creative with those and wanted a challenge. I've been learning about machine learning for a while, in particular however it was this post on Stackoverflow and sentdex's Machine Learning with Python playlist that really helped me find a solution that appeared to fit what I was trying to do. Using a couple of DHT22 sensor modules attached to Wemos D1 Mini , I was readily collecting Temporature data into OpenHAB. Wemos D1 + DHT22 shown with USB Key for Scale I settled on a Support Vector Machine algorithm as it seemed to best fit my dataset of \"inTemperatur,inHumidity,outTemperature,outHumidity\" and my decisions required being On or Off. The following video does an excellent job of explaining SVM. I ended up writing a Python script that listens for change and learn events on the MQTT message bus which ties my home automation system together. OpenHAB fires change events when I'm present in the shed and fires learn events when I manually turn on AC or Fan on. If 'themachine' predicts a positive result greater than 95% certaintity it will fire back to a channel that OpenHAB has a switch sitting on to receive the event. Example log of an event: 2017-01-11 20:53:52,721 INFO I'm 97.92% sure you wanted the shedFan on. shed,26.70,58.10,21.00,81.30 You can find out more information about how to implement something similar on GitHub , it's MIT licensed so feel free to use the code how you'd like. I have to admit, the first time it came on by itself was a little weird. I was standing on a stepladder doing some terminating in my rack (yes of course I have a full height network rack in my shed), thinking that it had gotten a little warm AC Turns on ... \"woah\". Skynet however is a long way off, well at least in my little home automation setup.","title":"Automating your home with 'themachine'","url":"http://techman83.me/hardware/2017/01/11/automating_your_home_with_themachine.html"},{"tags":"personal","text":"When I first started this blog blog in early 2014, I had grand intentions of keeping it up to date. I got a great start forking it from Paul Fenwick's website which actually provided a solid foundation to build this one. For the most part I liked the theme and the layout, however it had some issues. Primarily it was a Jekyll based site. Jekyll is an excellent static site generator written in Ruby, which was a problem when the only thing you have Ruby installed for is to generate your website. It also had a number of custom and modified gems written to extend the functionality of the site, which were all committed to the repository along with a bunch of JS libraries. All of that combined meant that I'd upgrade my computer, distro or update and something would break, then I'd have to brush the rust off my Ruby and figure it out. Which ultimately meant it got hard and I lost interest. Lately I've started to tinker with home automation, python, etc and not having a place to be able to easily share this information was starting to annoy me. Changing to a site generator based in my day-to-day language seemed the best plan, so after playing around with a few I settled on Pelican . Whilst I was at it I removed all hard added dependencies and improved the deployment/dependecy update procedures to make it a bunch easier to keep everything up to date. So here's to a New Year and hopefully lots of content! <3","title":"Overhauling techman83.me","url":"http://techman83.me/personal/2017/01/08/overhauling_techman83.me.html"},{"tags":"programming","text":"Windows administration is part of my job that I don't enjoy as much as linux, but it is still necessary. Though Windows is becoming less and less required, a lot of software still relies on it. Microsoft to their credit are making an effort to shift people onto their new OS before it becomes another Windows XP situation (Released in 2001, 4 OS' released in that time and it is still being used in a lot of places). However they seemed to have failed restricting the updates to Consumer machines only. Having the update deploy to coporate machines (I've seen reports of it happening on Domain joined and Volume licensed machines) is all rather annoying and removing them only means they have a chance to come back next time the user updates. In an ideal world you'd use WSUS, but with a geographically disperse workforce often working in remote locations this isn't practical. Enter PSWindowsUpdate . Now it didn't work on powershell 2.0 without a slight modification PSWindowsUpdate.psm1 - It's top comment on one of the threads, If I remember where I'll make the attribution. if ( $PSVersionTable . PSVersion . tostring () -ge 4 ) { Get-ChildItem -Path $PSScriptRoot | Unblock -File } Get-ChildItem -Path $PSScriptRoot \\*. ps1 | Foreach -Object { . $_ . FullName } I also removed the confirmation around the uninstall (I think it's just missing the argument to ignore it, but It was quicker for me just to remove it): Get-WUUninstall.ps1 with confirmation removed from \"Process', also added '/quiet /norestart' Process { If ( $KBArticleID ) { $KBArticleID = $KBArticleID -replace \"KB\" , \"\" wusa / uninstall / kb : $KBArticleID / quiet / norestart } #End If $KBArticleID Else { wmic qfe list } #End Else $KBArticleID } #End Process This is what I came up with and it appears to work well enough. It could use some extra checking and polishing, but we will have auto deploy and also as a utility app. If someone mentions it, they can be instructed to re-run it and it will try again. Also that's about as much time I wish to spend doing anything in powershell! Import-Module PSWindowsUpdate $ServiceID = Get-WUServiceManager | Select ServiceID # KB3035583 - GWX - Get Windows 10 AdWare # KB2952664 - Compatibility Update for Upgrading Win 7 to Win 10 # KB3021917 - Phones Home to tell MS how your computer will perform with Win 10 $kbIDs = \"KB3035583\" , \"KB2952664\" , \"KB3021917\" $installed = Get-WUList -ServiceID $ServiceID -IsInstalled -KBArticleID $kbIDs | Select KB if ( $installed ) { write-host \"We have some crud to remove\" Write-Host $installed foreach ( $update in $installed ) { Write-Host \"Removing \" $update . KB Get-WUUninstall -KBArticleID $update . KB Start-Sleep -s 10 } } else { write-host \"We're Crap free\" } Start-Sleep -s 10 $tohide = Get-WUList -ServiceID $ServiceID -KBArticleID $kbIDs -IsNotHidden if ( $tohide ) { Write-Host \"Hide ALL the CRAP!!!\" Write-Host ( $tohide | Format-Table | Out-String ) foreach ( $hide in $tohide ) { Write-Host \"Hiding \" $hide . KB Write-Host ( $hide | Format-Table | Out-String ) $hide . IsHidden = $true Start-Sleep -s 10 } } Things to note: Get-WUList seems to take forever. Get-WUList seems won't show what's current until after a reboot (some updates require a reboot and seem to not change their installed state until done). You can iterate of an object or an array, but if your object is an array and you don't loop over it you'll be left scratching your head.","title":"Powershell + Windows Update","url":"http://techman83.me/programming/2015/06/09/powershell.html"},{"tags":"programming","text":"This week I presented at PLUG, a brief history of AV, PLUG's involvement with Linux Conf AU and EventStreamr. You can find EventStreamr on GitHub and CPAN","title":"EventStreamr Talk at PLUG","url":"http://techman83.me/programming/2015/04/16/eventstreamr-talk-at-plug.html"},{"tags":"programming","text":"Being a Cyclist and a Geek, I like to track things. Being a Sys Admin and a Programmer I also like this to happen in the most efficient manner possible. Insert Strava , which is basically a social networking platform for cyclists/runners/swimmers (I believe they're adding more as well). Strava has an App for recording things or you can use any app or device that can output in one of the supported formats (GPX, FIT and TCX). Strava also has an api and I was looking to implement something for Exobrain and noted that whilst a Perl Client existed for Strava it was based on V2 API which no longer exists. So after pinging the Maintainer I was given co-maint on WebService::Strava and today I was able to release my first module on cpan! Probably the easiest way to install it is via cpanm + local::lib. On an Ubuntu distro you can grab these with apt: sudo apt-get install cpanminus liblocal-lib-perl Then you can configure local::lib $ perl -Mlocal::lib >> ~/.bashrc $ eval $( perl -Mlocal::lib ) then install WebService::Strava cpanm WebService::Strava Once installed you will need to configure your authentication. After setting up your application in your profile just run strava --setup It will ask for your client id, client secret and authenticate with the strava api. You will have to copy the 'code' from the url bar as Strava doesn't yet implement 'urn:ietf:wg:oauth:2.0:oob' standard for scripts. After which you can in a few lines access most of the API #!/usr/env/perl use strict ; use feature qw(say) ; use WebService:: Strava ; my $strava = WebService:: Strava -> new (); my $athlete = $strava -> athlete (); say $athlete -> firstname ; Which outputs leon@bofh-sider:/tmp$ perl strava.pl Leon Full documentation is available on cpan and you can contribute, ask for features on github","title":"WebService::Strava - A Strava API Perl Client","url":"http://techman83.me/programming/2014/08/26/webservice_strava.html"},{"tags":"programming","text":"We heavily utilise Jira at my place of work and one of our non IT based departments use it in their business processes. It was chosen to replace a custom developed, unreliable .NET application and apart from minor bending to suit the processes Jira is an excellent replacement. It's also far more reliable, far easier to keep up-to-date and runs on Linux! In the latest update I had a chance to really push the new version of the Jira Automation Plugin , which is a free and open source plugin. Written by Atlassian to support their internal processes, It's a little nugget of awesome that has really extended what we can do without writing bulk custom code. The team that maintains the Jira Automation plugin implemented a feature request I raised for Copying fields , which they implented and included in their next release. However being a simple field copy, the data needs to be exactly how the destination expects. Insert the Script Runner plugin. Which offers a massive amount of things you can extend without writing a custom Jira Plugin. Whilst I've written one before I'm completely allergic to the concept, as it requires Java ramp up that I'm not really interested in. When I first used the Script Runner plugin, external scripts were really the only option for doing things. Often when I need to hack something together a post action script is my default go to, but in the case of the combination of the Automation Plugin gave results that didn't work in practice and required a lot more effort to do the job. The easiest way to give the Automation plugin data that the destination can accept is to use a transitionary custom field. I was initially using a post action script to populate it, however it populates it after the Trigger that fires the automation and gets blatted in the process. Which is less than ideal. Setting a field to contain the raw username // Accessing Customfield data import com.atlassian.jira.ComponentManager import com.atlassian.jira.issue.CustomFieldManager // Updating Custom field data import com.atlassian.jira.issue.ModifiedValue import com.atlassian.jira.issue.util.DefaultIssueChangeHolder import com.atlassian.jira.issue.util.IssueChangeHolder import com.atlassian.jira.issue.fields.CustomField // Define Field IDs def assignee = \"customfield_11402\" def assigneeTransition = \"customfield_11705\" // Load Custom Fields from Jira ComponentManager componentManager = ComponentManager . getInstance () CustomFieldManager customFieldManager = componentManager . getCustomFieldManager () CustomField assigneeSrc = customFieldManager . getCustomFieldObject ( assignee ) CustomField assigneeTransitionCF = customFieldManager . getCustomFieldObject ( assigneeTransition ) // Load Values def assigneeVal = issue . getCustomFieldValue ( assigneeSrc ). getUsername () // Write data IssueChangeHolder changeHolder = new DefaultIssueChangeHolder (); assigneeTransitionCF . updateValue ( null , issue , new ModifiedValue ( issue . getCustomFieldValue ( assigneeTransitionCF ), assigneeVal ), changeHolder ) Now the Script Runner plugin can produce scripted fields . Which can return information when queried (cached by default, but caching can be disabled). Which is a perfect companion to the Automation Plugin. Returning a raw username compatible with the Assignee Field import com.atlassian.jira.ComponentManager import com.atlassian.jira.issue.CustomFieldManager import com.atlassian.jira.issue.fields.CustomField if ( issue . getCustomFieldValue ( ComponentManager . getInstance (). getCustomFieldManager (). getCustomFieldObject ( \"customfield_10400\" )) == null ) { return } else { // Get username from 'Custom Field 10400' return issue . getCustomFieldValue ( ComponentManager . getInstance (). getCustomFieldManager (). getCustomFieldObject ( \"customfield_10400\" )). getUsername () } Update 2014-08-08 - It's probably a good idea to check that 10400 contains a user object before you fill your logs with Null Pointer Exceptions during indexing! Automatically generate a Date compatible with the Due Date field import java.sql.Timestamp import java.util.Date import java.text.SimpleDateFormat import java.text.DateFormat //Returns current date + 4 weeks - formatted '26/Jul/14' return new SimpleDateFormat ( \"d/MMM/yy\" ). format ( new Timestamp ( new java . util . Date (). getTime ()). plus ( 28 )) Though the script runner is based on Groovy, you can import (at least to my limited knowledge) any Java class available within the Jira framework. The Jira Automation + Script Runner plugins complement each other perfectly and really give you a huge amount of flexibility without writing a custom Plugin. As long as the data for the destination is valid the Automation plugin will happily set the field and it's trivial to provide that data via a Scripted field. Happy Days!","title":"Jira Automation + Copying Fields","url":"http://techman83.me/programming/2014/08/04/jira_automation.html"},{"tags":"personal","text":"Mid June I was notified by Vodafone that I could transfer my Crazy John's service and to sweeten the deal, I could upgrade early. I checked out what was available and the Xperia Z had the best specs and kept me on the same plan I had previously. The real big tick in Sony's favour was the fact there was a factory supported unlocking method , the usual caveats apply but I'll vote with my wallet every time (are you listening Samsung!). I'm a massive gadget geek and I must admit I love my Xperia Z. The size is great, the screen resolution (1920x1080) is awesome, takes great photos for a phone and the cpu is nice and fast leaving me as a mostly hassle free CyanogenMod nightly build user. However a week ago… :-( Sony Xperia Z So how did it happen? Did I drop it? Well no, I set my alarm put it on charge and went to sleep. The next morning I woke up and it took me a little while to wake enough to work out why I couldn't turn off my alarm. Once waking up properly I noticed the crack and the fact that to the right of the crack the digitiser no longer functioned. Cracked! Now I had a bumper case and screen protectors waiting for my shiny new toy to arrive, when I originally ordered it. So I was quite flumuxed to find my screen cracked, for all intents and purposes unsuable. After recovering from the intial shock, I did what any good geek would do; search the internet! It did not take long and I found numerous examples of the same issue . So off to Vodafone I went, after showing the shop assistant the details of the issue; He noted that the device apart from the crack and a couple of light marks on the back, the phone was almost spotless. Unfortunately he may not have been aware exactly how ridgid their Repair Centers policies are. I noted the status of the repair changed to ‘Awaiting Customer Response' I gave them a call, which resulted being informed that without formal notification from Sony all physical damage is not covered by warranty and that I have to pay $350 for it to be repaired. The representative couldn't understand why I didn't want to pay and said I would have to take it up with Sony. I called Sony, to which their response was they would need to to assess the phone at their service center. Which required rejecting Vodafone's quote and getting the phone shipped back to me. So I have the device back and am waiting for shipping details from Sony's service center. By time the phone gets back to me It will have travelled ~16,000kms (Both Sony's Mobile and Vodafone's service centers are on the East Coast and I live on the West Coast)! I'll add updates as I get them, but I do hope Sony come to the party here. It's inexcusable for a screen to break seemingly of it's own accord, I would completely understand if I dropped it or stood on it and it broke; However that is not the case here. UPDATE 2014-08-06: Fonebiz finally received my device. As a private individual I had to ship it via Road Freight (Had a lithium ion battery, so considered dangerous goods...) so it took a week. I should have spoken nicely to the warehouse guys at work, they have the necessary approvals and qualifications to do so. Aus Post info here . UPDATE 2014-08-09: It's fixed! Took them no time at all, it was shipped the day after they received it and I received it the day after that. Very happy. The only things weren't replaced were the rear cover and Main PCB. PCB due to have been flashed with non Sony firmware, I'll leave my issues with that aside for now as that was something I knew upfront before purchasing the device. Some support for the modding community is better than none. Fixed!","title":"My Xperia Z broke itself!","url":"http://techman83.me/personal/2014/07/29/xperiaz_warranty.html"},{"tags":"personal","text":"After the usual Saturday shopping I decided I needed to repair my Ute and my bike. I figured the best place to start was replacing my Clutch Master Cylinder, after 18 years of service it was no longer operating very well. Driving around wasn't so bad, but parking had become quite tricky. The weekend before I replaced the Slave cyclinder, which was leaking. However wasn't the cause of the issue. It was a pretty simple job to replace and Leish (My wife) helped me bleed the air out of the system. Which took longer than fitting it. Clutch Master Cylinder After taking the Ute for a test drive it was time to fix my loose wheel on my bike. I had dropped by the Local Bike Shop on Friday, to price up a replacement free hub. Only to find that it was unlikely that I'd be able to get one for the OEM rims that came with the bike and they'd have to take the wheel to the service centre to even find out. With that in mind I picked up a bigger set of Allen keys, which turned out to be not big enough to pull out the freehub, even though 10mm is what the Shimano freehubs take. Dropping by an engineering supplies shop, I grabbed the only 11mm Allen key they head. Even the guy behind the counter was a little surprised that they even had one. Testing it was correct lead me to fixing the problem. All that was wrong was the freehub was loose. 11m Allen Key So I stripped it all down, gave it all a clean and put it back together. Ready for another week of commuting. Hopefully in the not too distant future, I'll get me a pair of Mavik Aksiums . My boss has a pair with around 14,000k on them and had very little trouble, beyond some loose spokes (which I fixed with some loctite and a spoke spanner I keep in my desk at work). Freehub Freehub - Axle - Cassete Allen Keys Refitted Tools Used All Fixed","title":"Freehub Repair/Replace Clutch Master Cylinder","url":"http://techman83.me/personal/2014/03/23/repair_freehub.html"},{"tags":"programming","text":"I learnt during the development of the EventStreamR frontend that websockets are cool! Another learning project of mine is NanodeControl and after learning what all the cool new things are available I wanted to have a crack at making it more modern. After a bit of search around I came across Dancer::Plugin::WebSocket . Expanding on the example provided here is a simple web page with simple messages and forked calls. It utilises the the Twiggy AnyEvent based non-blocking (asynchronous) and lightweight PSGI web server. You'll need some libraries, my favourite way to install them is cpanm : cpanm -S Plack Twiggy Dancer Dancer::Plugin::WebSocket AnyEvent::Util app.pl: use Dancer ':syntax' ; use Dancer::Plugin:: WebSocket ; use AnyEvent:: Util ; set logger => 'console' ; set log => 'core' ; get '/' => sub { q[ <html> <head> <script> var ws_path = \"ws://localhost:5000/_hippie/ws\"; var socket = new WebSocket(ws_path); socket.onopen = function() { document.getElementById('conn-status').innerHTML = 'Connected'; }; socket.onmessage = function(e) { var data = JSON.parse(e.data); console.log(data); if (data.msg) { document.getElementById('content').innerHTML = data.msg; setTimeout(function() { document.getElementById('content').innerHTML = 'No current message'; }, 5000); } }; function send_msg(message) { socket.send(JSON.stringify({ msg: message })); } function get_long() { var xmlHttp = null; xmlHttp = new XMLHttpRequest(); xmlHttp.open( \"GET\", '/long', false ); xmlHttp.send( null ); document.getElementById('content').innerHTML = 'Waiting...'; } </script> </head> <body> Connection Status: <span id=\"conn-status\"> Disconnected </span> <input value=\"Send Message\" type=button onclick=\"send_msg('hello')\" /> <input value=\"Get Long Call\" type=button onclick=\"get_long()\" /><br> <span id=\"content\"> No current message </span> </body> </html> ] }; get '/long' => sub { debug ( \"Stations Called\" ); fork_call { debug ( \"Forking\" ); sleep 5 ; } sub { my $data = 'Forked result!' ; ws_send $data ; debug ( \"Message Sent\" ); }; return ; }; dance ; Launch the script with plackup: plackup -s Twiggy socket_dance.pl -p 5000 Browse to http://localhost:5000 and you should be greeted with a page. Press the buttons and watch the magic happen! I did encounter issues with the latest version of chrome on page refreshes sending bad data crashing twiggy, looks like there are some bug reports indirectly relating to it. However it does work on initial page load and seems to work correctly on firefox :-) NOTE: I found a solution, instead of using the builtin AnyEvent::Loop, use EV. From what I've read it's a faster and more robust event backend. The errors from chrome still occur, however the server keeps going inside of barfing and dying. As long as EV is available AnyEvent will use it (unless otherwise configured).","title":"Dancing with WebSockets","url":"http://techman83.me/programming/2014/02/20/dancing_with_websockets.html"},{"tags":"personal","text":"As a follow up to my previous post , I ordered an upgraded BB. Being a Shimano HollowTech II, the different screw in type BBs are interchangeable. So long as you get the correct thread and width. Mine had the english thread (1.37x24) and the bracket width of 68mm. The bike shop had stock of a Dura-Ace SM-BB9000 in their warehouse, being only a little more than the equivilent Shimano 105 I decided to spring for the upgrade (mine only had a Tiagra, so quite an upgrade indeed). New vs Old The BB was pretty easy to fit in the end. Grease the BB threads, put back together, slide in the crank (with a few gentle taps with a plastic mallet drive it home) and a bit of thread locker on the crank arm bolts. I also gave everything a really good clean whilst it was apart. The chain rings were quite filthy and there a few places that are difficult to reach when it's all together. BB Fitted Shimano 105 Crankset The dropouts were something else I addressed. When I first got the bike it came with Skewers that were cheap and didn't have a lot of clamping force. Initially the replacements I got helped, but the damage was done and it indented the dropout in the wrong position. No matter how much force I used, eventually the wheel would find it's way into that incorrect position. Lately it's been happening nearly every day, which was driving me mental. So it gave me a chance to use my new found favourite product, JB Weld (2 part epoxy steel resin). I filled in the incorrect position so I could reset it and create a new one. So far it appears to be working quite well. Though I need a new skewer as I cracked it with all the force I had used to try and stop the wheel from moving. Dropout Repair","title":"Bottom Bracket Refit + Dropout repair","url":"http://techman83.me/personal/2014/02/12/refit_bb.html"},{"tags":"programming","text":"I love git, it's a really great tool. However no matter how used I get to my workflows I eventually end up commiting something into the wrong branch! And although I tend to use a custom bash shell called git-sh with a full colour prompt, with all the relevant information: master u = !dev-home> I somehow still manage to commit in the wrong place. So after doing it again today I figured I'd use some git functionality to resolve it. Ahh time to write some code. master u = !dev-home> tee somescript.pl !#/usr/bin/perl !#/usr/bin/perl print \"I'm a script...\\n\" print \"I'm a script...\\n\" master u = !dev-home> add somescript.pl master u = !dev-home *> commit somescript.pl -m 'somescript added' [ master 8f922af ] somescript added 1 file changed, 3 insertions ( + ) create mode 100644 somescript.p Bah, I commited to the wrong branch.. Again! I know, how 'bout I cherry pick that commit into the branch I wanted. master u+1!dev-home> checkout dev Switched to branch 'dev' dev!dev-home> cherry-pick 8f922af [ dev aeb40b7 ] somescript added 1 file changed, 3 insertions ( + ) create mode 100644 somescript.p Now it's in the right place! dev!dev-home> show commit aeb40b782a53c73e6cc2b4b4f87074b026d7e6c2 Author: Leon Wright <leon.wright@imdexlimited.com> Date: Tue Feb 11 15:11:01 2014 +0800 somescript added diff --git a/somescript.pl b/somescript.pl new file mode 100644 index 0000000..6145323 --- /dev/null +++ b/somescript.pl @@ -0,0 +1,3 @@ +!#/usr/bin/perl + +print \"I'm a script...\\n\" Hmm, but master has the commit that I don't want in it. Good thing I hadn't pushed that to my remote repository master u+1!dev-home> git reset --hard origin/master HEAD is now at 3761131 test xml stuffs Normality restored!","title":"Git: Bah, wrong branch!","url":"http://techman83.me/programming/2014/02/11/bah_wrong_branch.html"},{"tags":"personal","text":"Shimano BB - 4500 For those that don't know me, I like to cycle. Though I do find it difficult to fit the time in, I find it really easy to make it part of my commute to work. Commuting however is pretty hard on your equipment. Especially if you're not afraid of a bit of water. (I'm not, not even horizontal rain!) Another passion of mine is repairing things. Buying a complete replacement is always a last resort and it feels really wrong to pay someone to do something knowing full well that I'm more than capable of doing it myself. I noticed earlier this week that my pedaling didn't feel all that smooth. Upon investigation I noted a small amount of play in my crank shaft. I decided it wasn't bad enough to not commute for the week, so I waited till this evening to strip it down. After stripping it all down and inspecting the bearings, I found the issue straight away. The drive side bearing had a lot of play in it and when rotating it, it felt very gritty. Off to the bike shop tomorrow to buy a replacement, I might even spring for an upgrade to a Dura Ace BB.","title":"Bottom Bracket Removal","url":"http://techman83.me/personal/2014/02/06/repair_bb.html"},{"tags":"programming","text":"EventStreamR come to inception from a collection of experiences amongst our local LUG the Perth Linux User Group . Although we call ourselves PLUG, we have members from all over the state. Western Australia being quite large, 2,529,875 square km or over 10 times bigger than Victoria; so some of our members find it quite difficult to attend. A few years ago an initiave started by James Bromberger was to film and live stream all PLUG talks so that every member had an oppurtunity to attend our meetings, even if they couldn't necessarily make it in person. Between our experience streaming and attending LCA2013 to get a feel for how the conference ran, we had come to the conclusion that the Open Source Video mixing stack we use (DVswitch), whilst being easy to use and quite fit for purpose; it can be a little unreliable. Along with that DV aka Digital Video as a dying standard. To my knowledge there isn't a lot of work being put into the project as the world is moving on from DV. In light of all that we had come up with a list of requirements to bring reliability to the table. Open Source Be able to scale up and down Easy to setup and use Work on any hardware Central Configuration Management + Control Able to operate independently (Locations with no network or failure of networking) Ability to scale down was particularly important to us, as we want to be able to use this solution at our local LUG and also encourage other LUGs to generate content. Which was something that I felt was lacking in some of the established solutions (eg. Matterhorn, though I'm happy to be shown otherwise). So after gathering our requirements, there was also figuring out what problems we needed to solve. DVswitch - It sometimes goes bang DVgrab - does not fail gracefully Setup for multiple stations and rooms is time consuming There are 2 major components to EventStreamR, I'll cover the engine that sits in the background doing all the hardwork. I had pondered for some time about how I was going to solve the above problems and also meet our requirements. I felt Perl would be up to the challenge (and also happens to be the language I have the most exeprience in). It's a language I frequently use to glue things together in my day job and there are many libraries availble, which means less time re-inventing the wheel. With Luke writing the framework for the frontend, it left me focus on the backend. Which at it's core is a single daemon and essentially is a RESTful api enabled glorified process manager. I learnt a number of things whilst developing this with Jason . The current firewire stack is extremely reliable, the hardware I chose to develop the solution with initially was not. (2 days yak shaving due to a faulty camera and faulty firewire leads). IPC::Shareable - I love what it can do, however you really need to devote time to managing your shared memory. We had modest needs, so Signals + HTTP calls were more than enough. There are either restrictions to what key names when utilising JSON for serialised data or the JSON library does not escape them correctly. I need to fix this properly The default dancer HTTP engine (HTTP::Server::Simple::CGI) does not support all HTTP methods. Causing much hair pulling when attempting to address CORS issues. When you think you've squashed all the bugs, there will be more You won't have quality time to write code at a conference You will have to write code at the conference and it will inolve hours of yak shaving If you're making a lot of mistakes, have a nap or if it's late go to bed! Overall LCA2014 was a success and I'm happy to report that the solution was extremely reliable, we had some hardware failure and issues with capture devices; scenarios we were quite preparred for. I'm sure there is more I could write or more lessons I could share, but I will leave you with the following statement and youtube video. Amazing things can happen when your volunteers are not afraid to experiemnt. (We caught this on the video wall in the TAVNOC and crowded around the nearest computer with external speakers. It was amazing!)","title":"Automating AV: EventStreamr","url":"http://techman83.me/programming/2014/01/20/eventstreamr.html"},{"tags":"personal","text":"I've been saying it for years, \"I should make a website!\". However \"Graphic Design\" and \"Presentation\" aren't really things that excite me and so motivation was hard to come by. Sure there are CMS frameworks; but for a little website to display my random thoughts, the learning curve and time involved really meant that it never happened. Fortunately I follow an awesome dude named Paul Fenwick and he built this site and encouraged others to fork the codebase. Of which I was more than happy to oblige. Thanks Paul! Now to populate the site with content! :D","title":"First Post!","url":"http://techman83.me/personal/2014/01/19/first_post.html"}]}